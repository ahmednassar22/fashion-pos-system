// ุณูุฑูุจุช ูุจุณุท ูุชุตุญูุญ ุงูุฃุฎุทุงุก
const path = require('path');
const fs = require('fs');

console.log('๐ ุจุฏุก ุชุตุญูุญ ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช...');

// ุงูุชุญูู ูู ูุฌูุฏ ุงููููุงุช
const filesToCheck = [
  '../src/config/database.js',
  '../src/models/index.js', 
  '../src/models/Product.js',
  '../src/models/ProductVariant.js'
];

console.log('\n๐ ุงูุชุญูู ูู ูุฌูุฏ ุงููููุงุช:');
filesToCheck.forEach(file => {
  const fullPath = path.join(__dirname, file);
  const exists = fs.existsSync(fullPath);
  console.log(`${exists ? 'โ' : 'โ'} ${file} - ${exists ? 'ููุฌูุฏ' : 'ุบูุฑ ููุฌูุฏ'}`);
});

// ูุญุงููุฉ ุงุณุชูุฑุงุฏ ุงูููุงุฐุฌ
console.log('\n๐ ูุญุงููุฉ ุงุณุชูุฑุงุฏ ุงูููุงุฐุฌ...');
try {
  const { sequelize, Product, ProductVariant } = require('../src/models');
  console.log('โ ุชู ุงุณุชูุฑุงุฏ ุงูููุงุฐุฌ ุจูุฌุงุญ');
  
  // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
  console.log('\n๐ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...');
  sequelize.authenticate()
    .then(async () => {
      console.log('โ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ูุงุฌุญ');
      
      // ูุญุงููุฉ ูุฒุงููุฉ ุงูุฌุฏุงูู
      console.log('\n๐๏ธ ูุญุงููุฉ ุฅูุดุงุก ุงูุฌุฏุงูู...');
      try {
        await sequelize.sync({ force: true });
        console.log('โ ุชู ุฅูุดุงุก ุงูุฌุฏุงูู ุจูุฌุงุญ!');
        
        // ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ุจูุงูุงุช
        console.log('\n๐งช ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ุจูุงูุงุช...');
        const testProduct = await Product.create({
          name: 'ููุชุฌ ุงุฎุชุจุงุฑู',
          basePrice: 99.99,
          category: 'ุงุฎุชุจุงุฑ',
          barcode: 'TEST001'
        });
        
        await ProductVariant.create({
          productId: testProduct.id,
          size: 'M',
          color: 'ุฃุญูุฑ',
          quantity: 10,
          priceModifier: 0
        });
        
        console.log('โ ุชู ุฅุถุงูุฉ ุงูุจูุงูุงุช ุงูุงุฎุชุจุงุฑูุฉ ุจูุฌุงุญ');
        console.log('๐ ูู ุดูุก ูุนูู ุจุดูู ุตุญูุญ!');
        
      } catch (syncError) {
        console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุฌุฏุงูู:', syncError.message);
        console.error('ุชูุงุตูู ุงูุฎุทุฃ:', syncError);
      }
      
    })
    .catch(authError => {
      console.error('โ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:', authError.message);
    });
  
} catch (importError) {
  console.error('โ ุฎุทุฃ ูู ุงุณุชูุฑุงุฏ ุงูููุงุฐุฌ:', importError.message);
  console.error('ุชูุงุตูู ุงูุฎุทุฃ:', importError);
}