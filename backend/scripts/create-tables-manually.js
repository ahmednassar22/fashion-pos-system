const sqlite3 = require('sqlite3').verbose();
const path = require('path');
const fs = require('fs');

console.log('๐ง ุฅูุดุงุก ุงูุฌุฏุงูู ูุฏููุงู...');

const dbPath = path.join(__dirname, '../database.sqlite');

// ุญุฐู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุฏููุฉ ุฅุฐุง ูุงูุช ููุฌูุฏุฉ
if (fs.existsSync(dbPath)) {
  fs.unlinkSync(dbPath);
  console.log('๐๏ธ ุชู ุญุฐู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุฏููุฉ');
}

// ุฅูุดุงุก ุงุชุตุงู ุฌุฏูุฏ
const db = new sqlite3.Database(dbPath, (err) => {
  if (err) {
    console.error('โ ุฎุทุฃ ูู ูุชุญ ูุงุนุฏุฉ ุงูุจูุงูุงุช:', err.message);
    return;
  }
  console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช SQLite');
});

// ุชูุนูู ุงูููุงุชูุญ ุงูุฎุงุฑุฌูุฉ
db.run('PRAGMA foreign_keys = ON');

// ุฅูุดุงุก ุงูุฌุฏุงูู ูุงุญุฏุฉ ุชูู ุงูุฃุฎุฑู
const createTables = async () => {
  try {
    console.log('\n๐๏ธ ุฌุงุฑู ุฅูุดุงุก ุงูุฌุฏุงูู...');

    // ุฌุฏูู ุงูููุชุฌุงุช
    await new Promise((resolve, reject) => {
      db.run(`CREATE TABLE IF NOT EXISTS products (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        description TEXT,
        basePrice DECIMAL(10,2) NOT NULL,
        category TEXT,
        season TEXT DEFAULT 'all',
        gender TEXT DEFAULT 'unisex',
        barcode TEXT UNIQUE,
        isActive BOOLEAN DEFAULT 1,
        createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
        updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP
      )`, (err) => {
        if (err) reject(err);
        else {
          console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู products');
          resolve();
        }
      });
    });

    // ุฌุฏูู ูุชุบูุฑุงุช ุงูููุชุฌ
    await new Promise((resolve, reject) => {
      db.run(`CREATE TABLE IF NOT EXISTS product_variants (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        productId INTEGER NOT NULL,
        size TEXT NOT NULL,
        color TEXT NOT NULL,
        sku TEXT UNIQUE,
        quantity INTEGER DEFAULT 0,
        priceModifier DECIMAL(10,2) DEFAULT 0,
        createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
        updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (productId) REFERENCES products(id) ON DELETE CASCADE
      )`, (err) => {
        if (err) reject(err);
        else {
          console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู product_variants');
          resolve();
        }
      });
    });

    // ุฅุถุงูุฉ ุจูุงูุงุช ุงุฎุชุจุงุฑูุฉ
    console.log('\n๐ฆ ุฌุงุฑู ุฅุถุงูุฉ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ...');
    
    // ุฅุถุงูุฉ ููุชุฌุงุช
    await new Promise((resolve, reject) => {
      db.run(`INSERT INTO products (name, description, basePrice, category, barcode) 
              VALUES (?, ?, ?, ?, ?)`, 
        ['ุชูุดูุฑุช ูุทูู ุฃุณุงุณู', 'ุชูุดูุฑุช ูุทูู ุนุงูู ุงูุฌูุฏุฉ', 49.99, 'ููุงุจุณ', 'TSHIRT001'],
        function(err) {
          if (err) reject(err);
          else {
            const productId = this.lastID;
            console.log('โ ุชู ุฅุถุงูุฉ ุงูููุชุฌ 1 - ID:', productId);
            
            // ุฅุถุงูุฉ ูุชุบูุฑุงุช ููููุชุฌ ุงูุฃูู
            db.run(`INSERT INTO product_variants (productId, size, color, quantity, sku) 
                    VALUES (?, ?, ?, ?, ?)`, 
              [productId, 'S', 'ุฃุจูุถ', 25, 'TSHIRT001-S-WHITE']);
            
            db.run(`INSERT INTO product_variants (productId, size, color, quantity, sku) 
                    VALUES (?, ?, ?, ?, ?)`, 
              [productId, 'M', 'ุฃุจูุถ', 30, 'TSHIRT001-M-WHITE']);
            
            db.run(`INSERT INTO product_variants (productId, size, color, quantity, sku) 
                    VALUES (?, ?, ?, ?, ?)`, 
              [productId, 'L', 'ุฃุณูุฏ', 20, 'TSHIRT001-L-BLACK']);
            
            resolve();
          }
        }
      );
    });

    // ุฅุถุงูุฉ ููุชุฌ ุซุงูู
    await new Promise((resolve, reject) => {
      db.run(`INSERT INTO products (name, description, basePrice, category, barcode) 
              VALUES (?, ?, ?, ?, ?)`, 
        ['ุฌููุฒ ุฑููุงูุณุฏ', 'ุฌููุฒ ูุฑูุญ ููุงุฑุชุฏุงุก ุงููููู', 129.99, 'ููุงุจุณ', 'JEANS001'],
        function(err) {
          if (err) reject(err);
          else {
            const productId = this.lastID;
            console.log('โ ุชู ุฅุถุงูุฉ ุงูููุชุฌ 2 - ID:', productId);
            
            // ุฅุถุงูุฉ ูุชุบูุฑุงุช ููููุชุฌ ุงูุซุงูู
            db.run(`INSERT INTO product_variants (productId, size, color, quantity, sku) 
                    VALUES (?, ?, ?, ?, ?)`, 
              [productId, '28', 'ุฃุฒุฑู', 15, 'JEANS001-28-BLUE']);
            
            db.run(`INSERT INTO product_variants (productId, size, color, quantity, sku) 
                    VALUES (?, ?, ?, ?, ?)`, 
              [productId, '30', 'ุฃุฒุฑู', 20, 'JEANS001-30-BLUE']);
            
            resolve();
          }
        }
      );
    });

    // ุงูุชุญูู ูู ุงูุจูุงูุงุช ุงููุถุงูุฉ
    console.log('\n๐ ุงูุชุญูู ูู ุงูุจูุงูุงุช...');
    
    db.get("SELECT COUNT(*) as count FROM products", (err, row) => {
      if (err) {
        console.error('โ ุฎุทุฃ ูู ุนุฏ ุงูููุชุฌุงุช:', err);
      } else {
        console.log(`๐๏ธ ุนุฏุฏ ุงูููุชุฌุงุช: ${row.count}`);
      }
    });

    db.get("SELECT COUNT(*) as count FROM product_variants", (err, row) => {
      if (err) {
        console.error('โ ุฎุทุฃ ูู ุนุฏ ุงููุชุบูุฑุงุช:', err);
      } else {
        console.log(`๐จ ุนุฏุฏ ุงููุชุบูุฑุงุช: ${row.count}`);
      }
    });

    console.log('\n๐ ุชู ุฅูุดุงุก ุงูุฌุฏุงูู ูุงูุจูุงูุงุช ุจูุฌุงุญ!');
    console.log('๐พ ููู ูุงุนุฏุฉ ุงูุจูุงูุงุช:', dbPath);

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุฌุฏุงูู:', error);
  } finally {
    // ุฅุบูุงู ุงูุงุชุตุงู ุจุนุฏ ุซุงููุชูู ููุณูุงุญ ุจุฌููุน ุงูุงุณุชุนูุงูุงุช
    setTimeout(() => {
      db.close((err) => {
        if (err) {
          console.error('โ ุฎุทุฃ ูู ุฅุบูุงู ุงูุงุชุตุงู:', err);
        } else {
          console.log('๐ ุชู ุฅุบูุงู ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช');
        }
      });
    }, 2000);
  }
};

// ุจุฏุก ุงูุนูููุฉ
createTables();